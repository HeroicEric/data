# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
# | Type               | Master | Beta | Release | LTS  | Tags |
# | ---                | ---    | ---  | ---     | ---  | ---  |
# | Lint               | yes    | yes  | no      | no   | no   |
# | Basic Tests        | yes    | yes  | yes     | yes  | no   |
# | Build  Tests       | yes    | yes  | yes*    | yes* | no   |
# | Windows Tests      | yes    | yes  | yes*    | yes* | no   |
# | Floating Deps      | yes    | yes  | yes     | yes  | no   |
# | Ember LTS Branches | yes    | yes  | yes     | yes  | no   |
# | Release Channels   | yes    | yes  | no      | no   | no   |
# | External Partners  | yes    | yes  | no      | no   | no   |
#
# * Runs but skips tests for in-progress-features

trigger:
  - master
  - beta
  - release
  - release-*
  - lts-*

jobs:
  - job: Lint
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn lint:features
        displayName: 'Lint features'
      - script: yarn lint:js
        displayName: 'Lint JS'

  - job: Basic_Ember_Data_tests
    dependsOn: Lint
    condition: or(succeeded(), eq(dependencies.Lint.result, 'Skipped'))
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome
        displayName: 'Install Google Chrome'
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn test
        displayName: 'Basic Tests'

  - job: Ember_Data_builds_tests
    dependsOn: Basic_Ember_Data_tests
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome
        displayName: 'Install Google Chrome'
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn test:production
        displayName: 'Production'
      - script: TARGET_IE11=true yarn test
        displayName: 'Max transpilation Tests'
      - script: yarn test:node
        displayName: 'Node Tests'
      - script: yarn test:try-one with-ember-fetch
        displayName: 'Basic Tests with ember-fetch'
      - script: yarn test:enabled-in-progress-features
        displayName: 'In progress features'
        condition: |
          or(
            in(variables['Build.SourceBranchName'], 'master', 'beta'),
            in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
          )

  - job: Windows_tests
    dependsOn: Basic_Ember_Data_tests
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn test
        displayName: 'Basic Tests'
      - script: yarn test:production
        displayName: 'Production'
      - script: yarn test:enabled-in-progress-features
        displayName: 'In progress features'
        condition: |
          or(
            in(variables['Build.SourceBranchName'], 'master', 'beta'),
            in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
          )

  - job: Floating_dependencies
    dependsOn: Basic_Ember_Data_tests
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome
        displayName: 'Install Google Chrome'
      - script: yarn install --no-lockfile --non-interactive
        displayName: 'Yarn install (no lockfile)'
      - script: yarn test
        displayName: 'Basic Tests'

  - job: Ember_LTS_tests
    dependsOn: Basic_Ember_Data_tests
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome
        displayName: 'Install Google Chrome'
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn test:try-one ember-lts-3.4
        displayName: 'Ember LTS test 3.4'
      - script: yarn test:try-one ember-lts-3.8
        displayName: 'Ember LTS test 3.8'

  - job: Ember_Release_Channels_tests
    dependsOn: Basic_Ember_Data_tests
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome
        displayName: 'Install Google Chrome'
      - script: yarn
        displayName: 'Yarn install'
      - script: yarn test:try-one ember-release
        displayName: 'Ember Release'
      - script: yarn test:try-one ember-beta
        displayName: 'Ember Beta'
      - script: yarn test:try-one ember-canary
        displayName: 'Ember Canary'

  - job: External_Partner_tests_ilios
    dependsOn: Basic_Ember_Data_tests
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install firefox
        displayName: 'Install Firefox'
      - script: yarn
        displayName: 'Yarn install'
      - script: node ./bin/packages-for-commit.js
        displayName: 'Generate package tarballs'
      - script: yarn test-external:ilios-frontend
        displayName: 'External: ilios-frontend'

  - job: External_Partner_tests_travis
    dependsOn: Basic_Ember_Data_tests
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome firefox
        displayName: 'Install Google Chrome & Firefox'
      - script: yarn
        displayName: 'Yarn install'
      - script: node ./bin/packages-for-commit.js
        displayName: 'Generate package tarballs'
      - script: yarn test-external:travis-web
        displayName: 'External: travis-web'

  - job: External_Partner_tests_ember_observer
    dependsOn: Basic_Ember_Data_tests
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome firefox
        displayName: 'Install Google Chrome & Firefox'
      - script: yarn
        displayName: 'Yarn install'
      - script: node ./bin/packages-for-commit.js
        displayName: 'Generate package tarballs'
      - script: yarn test-external:ember-observer
        displayName: 'External: ember-observer'

  - job: External_Partner_tests_other
    dependsOn: Basic_Ember_Data_tests
    condition: |
      or(
        in(variables['Build.SourceBranchName'], 'master', 'beta'),
        in(variables['System.PullRequest.TargetBranch'], 'master', 'beta')
      )
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - task: NodeTool@0
        displayName: 'Node install'
        inputs:
          versionSpec: '10.x' # The version we're installing
      - script: brew update && brew cask install google-chrome firefox
        displayName: 'Install Google Chrome & Firefox'
      - script: yarn
        displayName: 'Yarn install'
      - script: node ./bin/packages-for-commit.js
        displayName: 'Generate package tarballs'
      - script: yarn test-external:storefront
        displayName: 'External: storefront'
      #  - script: yarn test-external:factory-guy
      #    displayName: 'External: factory-guy'
      - script: yarn test-external:ember-resource-metadata
        displayName: 'External: ember-resource-metadata'
      - script: yarn test-external:ember-data-relationship-tracker
        displayName: 'External: ember-data-relationship-tracker'
      - script: yarn test-external:model-fragments
        displayName: 'External: model-fragments'
      - script: yarn test-external:emberaddons.com
        displayName: 'External: emberaddons.com'
      - script: yarn test-external:ember-data-change-tracker
        displayName: 'External: ember-data-change-tracker'
      - script: yarn test-external:ember-m3
        displayName: 'External: ember-m3'
